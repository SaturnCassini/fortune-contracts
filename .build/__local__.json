{"contractTypes":{"fortune":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"MintFortune","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"legend","type":"address"},{"indexed":false,"name":"value","type":"string"}],"name":"BurnFortune","type":"event"},{"inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_total_supply","type":"uint256"},{"name":"legendsAddress","type":"address"},{"name":"tributeFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_owner","type":"address"}],"name":"fortuneBalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"to","type":"address"}],"name":"mintFortune","outputs":[{"name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"burnFortune","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"legend","type":"address"}],"name":"cardOwnedBy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLegendBalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFortuneChestBalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentOwner","outputs":[{"name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"new_owner","type":"address"}],"name":"setOwner","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getUnclaimedLostTribute","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLostTributes","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintCount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fortuneContract","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tributeBalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tributeLost","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tributeLostAndUnclaimed","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tributeFee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}],"contractName":"fortune","deploymentBytecode":{"bytecode":""},"dev_messages":{},"devdoc":{"author":"0xcassini.eth","methods":{"allowance(address,address)":{"params":{"_owner":"The address which owns the funds","_spender":"The address which will spend the funds"},"returns":{"_0":"The amount of tokens still available for the spender"}},"approve(address,uint256)":{"details":"Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."},"returns":{"_0":"Success boolean"}},"burnFortune()":{"details":"You could add an assert here to make sure the owner of the nft is the one who can burn","returns":{"_0":"Success boolean"}},"cardOwnedBy(address)":{"details":"this is not yet tested and should be used with caution"},"currentOwner()":{"details":"this is not yet tested and should be used with caution"},"fortuneBalance(address)":{"params":{"_owner":"Address to query the balance of"},"returns":{"_0":"Token balance"}},"getFortuneChestBalance()":{"details":"this is not yet tested and should be used with caution","returns":{"_0":"ETH balance"}},"getLegendBalance()":{"details":"this is not yet tested and should be used with caution"},"getUnclaimedLostTribute()":{"details":"this is not yet tested and should be used with caution","returns":{"_0":"ETH balance"}},"mintFortune(address)":{"details":"You could add an assert here to make sure the owner of the nft is the one who can mint","params":{"to":"who receives the fortune"},"returns":{"_0":"True if the caller addres is a legend"}},"setOwner(address)":{"details":"You could add an assert here to make sure the owner of the nft is the one who can burn","params":{"new_owner":"The address that will be the new owner of the contract"},"returns":{"_0":"Success boolean"}},"transfer(address,uint256)":{"details":"Vyper does not allow underflows, so attempting to transfer more tokens than an account has will revert","params":{"_to":"The address to transfer to","_value":"The amount to be transferred"},"returns":{"_0":"Success boolean"}},"transferFrom(address,address,uint256)":{"details":"Vyper does not allow underflows, so attempting to transfer more tokens than an account has will revert","params":{"_from":"The address which you want to send tokens from","_to":"The address which you want to transfer to","_value":"The amount of tokens to be transferred"},"returns":{"_0":"Success boolean"}},"withdrawLostTributes()":{"details":"You could add an assert here to make sure the owner of the nft is the one who can burn","returns":{"_0":"Success boolean"}}},"title":"Bare-bones Token implementation of the Fortune cards"},"pcmap":{"1003":[151,13,151,26],"1005":[151,13,151,26],"1006":[160,19,160,29],"1010":[160,31,160,34],"1016":[160,36,160,42],"1025":[160,4,160,43],"1028":[160,4,160,43],"1029":[160,4,160,43],"1030":[161,11,161,15],"1073":[165,17,165,32],"1075":[165,17,165,32],"1087":[165,34,165,47],"1090":[165,34,165,47],"1091":[177,31,177,37],"1093":[175,11,175,55],"1094":[175,11,175,26],"1096":[175,27,175,32],"1099":[175,11,175,33],"1101":[175,11,175,33],"1102":[175,11,175,33],"1104":[175,11,175,33],"1105":[175,11,175,33],"1107":[175,11,175,33],"1109":[175,11,175,33],"1111":[175,34,175,44],"112":[191,43,191,83],"1123":[175,11,175,45],"1124":[175,11,175,45],"1125":[175,11,175,55],"1127":[175,4,175,81],"1128":[175,4,175,81],"1131":[175,4,175,81],"1137":[175,57,175,81],"1174":[175,57,175,81],"1175":[175,57,175,81],"1178":[175,4,175,81],"1231":[175,4,175,81],"1232":[176,4,176,19],"1234":[176,20,176,25],"1237":[176,4,176,26],"1239":[176,4,176,26],"1240":[176,4,176,26],"1242":[176,4,176,26],"1243":[176,4,176,26],"1245":[176,4,176,26],"1247":[176,4,176,26],"1249":[176,27,176,37],"1261":[176,4,176,38],"1262":[176,4,176,38],"1263":[176,4,176,48],"1264":[176,4,176,48],"1265":[177,31,177,37],"1269":[176,4,176,48],"1271":[176,4,176,48],"1278":[176,4,176,48],"1279":[176,4,176,48],"1280":[176,4,176,48],"1281":[176,4,176,48],"1282":[176,4,176,48],"1284":[176,4,176,48],"1285":[177,19,177,24],"1291":[177,26,177,29],"1298":[177,31,177,37],"1307":[177,4,177,38],"1310":[177,4,177,38],"1311":[177,4,177,38],"1312":[178,11,178,15],"1344":[220,34,220,50],"1346":[220,51,220,61],"1347":[220,34,220,62],"1349":[220,34,220,62],"1350":[220,34,220,62],"1352":[220,34,220,62],"1353":[220,34,220,62],"1355":[220,34,220,62],"1357":[220,34,220,62],"1358":[220,4,220,62],"1365":[220,4,220,62],"1373":[220,4,220,62],"1381":[220,4,220,62],"1387":[220,4,220,62],"1388":[221,40,221,41],"1390":[221,11,221,24],"1392":[221,25,221,35],"1393":[221,11,221,36],"1395":[221,11,221,36],"1396":[221,11,221,36],"1398":[221,11,221,36],"1399":[221,11,221,36],"1401":[221,11,221,36],"1403":[221,11,221,36],"1406":[221,4,221,76],"1407":[221,4,221,76],"1410":[221,4,221,76],"1415":[221,43,221,76],"1451":[221,43,221,76],"1452":[221,43,221,76],"1454":[221,4,221,76],"148":[191,43,191,83],"149":[191,43,191,83],"1503":[221,4,221,76],"1504":[223,29,223,54],"1506":[223,29,223,60],"1507":[223,57,223,60],"151":[191,4,191,83],"1510":[223,29,223,60],"1512":[223,29,223,60],"1519":[223,29,223,60],"1520":[223,29,223,60],"1521":[223,11,223,26],"1522":[223,11,223,60],"1523":[223,4,223,109],"1526":[223,4,223,109],"1531":[223,63,223,109],"1567":[223,63,223,109],"1604":[223,63,223,109],"1605":[223,63,223,109],"1607":[223,4,223,109],"1656":[223,4,223,109],"1657":[224,4,224,20],"1660":[224,24,224,25],"1671":[224,4,224,25],"1672":[224,4,224,25],"1673":[224,4,224,20],"1676":[225,4,225,17],"1678":[225,18,225,28],"1679":[225,4,225,29],"1681":[225,4,225,29],"1682":[225,4,225,29],"1684":[225,4,225,29],"1685":[225,4,225,29],"1687":[225,4,225,29],"1689":[225,4,225,29],"1692":[225,33,225,34],"1703":[225,4,225,34],"1704":[225,4,225,34],"1707":[225,4,225,34],"1708":[227,9,227,21],"1709":[227,24,227,40],"1722":[227,9,227,40],"1723":[227,9,227,40],"1724":[227,43,227,68],"1728":[227,9,227,68],"1730":[227,9,227,68],"1737":[227,9,227,68],"1738":[227,9,227,68],"1739":[227,9,227,68],"1740":[227,9,227,68],"1741":[227,71,227,96],"1745":[227,9,227,96],"1747":[227,9,227,96],"1754":[227,9,227,96],"1755":[227,9,227,96],"1756":[227,9,227,96],"1757":[227,9,227,96],"1758":[227,99,227,124],"1762":[227,9,227,124],"1764":[227,9,227,124],"1771":[227,9,227,124],"1772":[227,9,227,124],"1773":[227,9,227,124],"1774":[227,9,227,124],"1775":[227,128,227,130],"1777":[227,8,227,130],"1778":[227,8,227,130],"1779":[227,8,227,130],"1780":[227,8,227,130],"1783":[227,7,227,135],"1784":[227,7,227,135],"1785":[227,7,227,135],"1786":[227,7,227,135],"1787":[227,4,238,20],"1790":[227,4,238,20],"1791":[228,8,228,27],"1793":[228,8,228,53],"1794":[228,31,228,53],"1798":[228,8,228,53],"1800":[228,8,228,53],"1807":[228,8,228,53],"1808":[228,8,228,53],"1809":[228,8,228,53],"1810":[228,8,228,53],"1811":[228,8,228,27],"1813":[228,8,228,53],"1814":[229,26,229,48],"1816":[229,26,229,100],"1817":[229,53,229,75],"1819":[229,53,229,93],"1820":[229,78,229,93],"1824":[229,53,229,93],"1828":[229,53,229,93],"1839":[229,53,229,93],"1840":[229,53,229,93],"1841":[229,53,229,93],"1842":[229,53,229,93],"1843":[229,96,229,99],"1845":[229,53,229,99],"1847":[229,53,229,99],"1848":[229,53,229,99],"1850":[229,26,229,100],"1852":[229,26,229,100],"1859":[229,26,229,100],"1860":[229,26,229,100],"1861":[229,26,229,100],"1862":[229,26,229,100],"1863":[229,8,229,100],"1865":[229,8,229,100],"1874":[230,25,230,31],"1877":[230,13,230,23],"1881":[230,8,230,32],"1882":[230,8,230,32],"1885":[230,8,230,32],"1886":[231,24,231,34],"1887":[231,8,231,43],"1931":[231,36,231,42],"1968":[231,36,231,42],"1969":[231,36,231,42],"200":[191,4,191,83],"201":[192,7,192,27],"203":[192,7,192,49],"2036":[231,8,231,43],"2039":[231,8,231,43],"2040":[232,15,232,19],"2056":[227,4,238,20],"2057":[227,4,238,20],"2058":[234,8,234,24],"2060":[234,8,234,50],"2061":[234,28,234,50],"2065":[234,8,234,50],"2067":[234,8,234,50],"2074":[234,8,234,50],"2075":[234,8,234,50],"2076":[234,8,234,50],"2077":[234,8,234,50],"2078":[234,8,234,24],"2080":[234,8,234,50],"2081":[235,26,235,48],"2083":[235,26,235,104],"2084":[235,53,235,75],"2086":[235,53,235,97],"2087":[235,79,235,94],"2089":[235,79,235,96],"2090":[235,79,235,96],"2094":[235,79,235,96],"2104":[235,79,235,96],"2105":[235,79,235,96],"2107":[235,53,235,97],"2111":[235,53,235,97],"212":[192,38,192,48],"2122":[235,53,235,97],"2123":[235,53,235,97],"2124":[235,53,235,97],"2125":[235,53,235,97],"2126":[235,100,235,103],"2128":[235,53,235,103],"2130":[235,53,235,103],"2131":[235,53,235,103],"2133":[235,26,235,104],"2135":[235,26,235,104],"2142":[235,26,235,104],"2143":[235,26,235,104],"2144":[235,26,235,104],"2145":[235,26,235,104],"2146":[235,8,235,104],"2148":[235,8,235,104],"2157":[236,25,236,31],"2160":[236,13,236,23],"2164":[236,8,236,32],"2165":[236,8,236,32],"2168":[236,8,236,32],"2169":[237,24,237,34],"2170":[237,8,237,42],"2214":[237,36,237,41],"224":[192,7,192,49],"2251":[237,36,237,41],"2252":[237,36,237,41],"2319":[237,8,237,42],"2322":[237,8,237,42],"2323":[238,15,238,20],"2365":[242,16,242,30],"2367":[242,16,242,30],"2368":[247,11,247,27],"2370":[247,28,247,34],"2373":[247,11,247,35],"2375":[247,11,247,35],"2376":[247,11,247,35],"2378":[247,11,247,35],"2379":[247,11,247,35],"2381":[247,11,247,35],"2383":[247,11,247,35],"2413":[256,31,256,51],"2418":[256,4,256,51],"2421":[257,11,257,18],"2423":[257,11,257,40],"2432":[257,29,257,39],"2444":[257,11,257,40],"2472":[257,11,257,40],"2473":[257,11,257,40],"2495":[267,11,267,23],"252":[192,7,192,49],"2524":[278,11,278,21],"253":[192,7,192,49],"254":[192,7,192,53],"255":[192,7,192,53],"256":[192,4,210,28],"2566":[281,13,281,30],"2568":[281,13,281,30],"2569":[289,25,289,35],"2570":[289,11,289,21],"2572":[289,11,289,35],"2573":[289,11,289,35],"2574":[289,4,289,35],"2577":[289,4,289,35],"2578":[290,21,290,31],"2579":[290,7,290,17],"2581":[290,7,290,31],"2582":[290,7,290,31],"2583":[290,4,294,28],"2586":[290,4,294,28],"2587":[291,21,291,30],"259":[192,4,210,28],"2590":[291,8,291,18],"2593":[292,15,292,19],"260":[193,51,193,66],"2609":[290,4,294,28],"261":[193,11,193,26],"2610":[290,4,294,28],"2615":[294,14,294,28],"263":[193,27,193,37],"264":[193,11,193,38],"2651":[294,14,294,28],"2652":[294,14,294,28],"2654":[294,8,294,28],"266":[193,11,193,38],"267":[193,11,193,38],"2673":[294,8,294,28],"2681":[294,8,294,28],"2686":[294,8,294,28],"269":[193,11,193,38],"270":[193,11,193,38],"2702":[294,8,294,28],"272":[193,11,193,38],"2725":[304,11,304,39],"274":[193,11,193,38],"2756":[314,25,314,35],"2757":[314,11,314,21],"2759":[314,11,314,35],"276":[193,41,193,48],"2760":[314,11,314,35],"2761":[314,4,314,35],"2764":[314,4,314,35],"2765":[315,21,315,31],"2766":[315,7,315,17],"2768":[315,7,315,31],"2769":[315,7,315,31],"2770":[315,4,321,38],"2773":[315,4,321,38],"2782":[316,25,316,37],"2783":[316,13,316,23],"2789":[316,8,316,38],"2790":[316,8,316,38],"2793":[316,8,316,38],"2794":[317,30,317,31],"2796":[317,8,317,27],"2799":[318,39,318,40],"2801":[318,8,318,36],"2804":[319,15,319,19],"2820":[315,4,321,38],"2821":[315,4,321,38],"2826":[321,14,321,38],"2862":[321,14,321,38],"2863":[321,14,321,38],"2865":[321,8,321,38],"2884":[321,8,321,38],"289":[193,11,193,48],"2892":[321,8,321,38],"2897":[321,8,321,38],"290":[193,11,193,48],"291":[193,11,193,66],"2913":[321,8,321,38],"292":[193,8,194,48],"293":[193,8,194,48],"296":[193,8,194,48],"301":[194,18,194,48],"337":[194,18,194,48],"338":[194,18,194,48],"3393":[137,0,147,36],"3394":[144,35,144,41],"3397":[144,11,144,24],"3399":[144,25,144,30],"340":[194,12,194,48],"3402":[144,11,144,31],"3404":[144,11,144,31],"3405":[144,11,144,31],"3407":[144,11,144,31],"3408":[144,11,144,31],"3410":[144,11,144,31],"3412":[144,11,144,31],"3415":[144,4,144,65],"3416":[144,4,144,65],"3419":[144,4,144,65],"3424":[144,43,144,65],"3460":[144,43,144,65],"3461":[144,43,144,65],"3463":[144,4,144,65],"3512":[144,4,144,65],"3513":[145,4,145,17],"3515":[145,18,145,23],"3518":[145,4,145,24],"3520":[145,4,145,24],"3521":[145,4,145,24],"3523":[145,4,145,24],"3524":[145,4,145,24],"3526":[145,4,145,24],"3528":[145,4,145,24],"3531":[145,28,145,34],"3546":[145,4,145,34],"3547":[145,4,145,34],"3550":[145,4,145,34],"3551":[146,4,146,17],"3553":[146,18,146,21],"3556":[146,4,146,22],"3558":[146,4,146,22],"3559":[146,4,146,22],"3561":[146,4,146,22],"3562":[146,4,146,22],"3564":[146,4,146,22],"3566":[146,4,146,22],"3569":[146,26,146,32],"3584":[146,4,146,32],"3585":[146,4,146,32],"3588":[146,4,146,32],"3589":[147,24,147,27],"359":[194,12,194,48],"3591":[147,4,147,36],"3592":[147,17,147,22],"3594":[147,4,147,36],"3595":[147,4,147,36],"3628":[147,29,147,35],"3636":[147,4,147,36],"3638":[147,4,147,36],"367":[194,12,194,48],"372":[194,12,194,48],"388":[194,12,194,48],"389":[193,8,194,48],"390":[195,8,195,24],"393":[195,28,195,29],"404":[195,8,195,29],"405":[195,8,195,29],"406":[195,8,195,24],"409":[196,8,196,21],"411":[196,22,196,32],"412":[196,8,196,33],"414":[196,8,196,33],"415":[196,8,196,33],"417":[196,8,196,33],"418":[196,8,196,33],"420":[196,8,196,33],"422":[196,8,196,33],"425":[196,37,196,38],"436":[196,8,196,38],"437":[196,8,196,38],"440":[196,8,196,38],"441":[197,38,197,53],"442":[197,8,197,23],"444":[197,24,197,34],"445":[197,8,197,35],"447":[197,8,197,35],"448":[197,8,197,35],"450":[197,8,197,35],"451":[197,8,197,35],"453":[197,8,197,35],"455":[197,8,197,35],"457":[198,8,198,27],"460":[198,31,198,40],"473":[198,8,198,40],"474":[198,8,198,40],"475":[198,8,198,27],"478":[199,8,199,24],"480":[199,25,199,35],"481":[199,8,199,36],"483":[199,8,199,36],"484":[199,8,199,36],"486":[199,8,199,36],"487":[199,8,199,36],"489":[199,8,199,36],"49":[182,16,182,27],"491":[199,8,199,36],"492":[200,24,200,38],"495":[199,8,205,9],"497":[201,21,201,30],"500":[199,8,205,9],"503":[202,24,202,39],"506":[199,8,205,9],"509":[203,24,203,40],"51":[182,16,182,27],"512":[199,8,205,9],"515":[199,8,205,9],"516":[206,8,206,22],"519":[206,26,206,27],"52":[191,11,191,24],"530":[206,8,206,27],"531":[206,8,206,27],"532":[206,8,206,22],"535":[207,24,207,34],"536":[207,8,207,38],"54":[191,25,191,35],"55":[191,11,191,36],"569":[207,38,207,38],"57":[191,11,191,36],"576":[207,8,207,38],"578":[207,8,207,38],"579":[208,15,208,19],"58":[191,11,191,36],"595":[192,4,210,28],"596":[192,4,210,28],"60":[191,11,191,36],"601":[210,14,210,28],"61":[191,11,191,36],"63":[191,11,191,36],"637":[210,14,210,28],"638":[210,14,210,28],"640":[210,8,210,28],"65":[191,11,191,36],"659":[210,8,210,28],"66":[191,11,191,41],"667":[210,8,210,28],"67":[191,11,191,41],"672":[210,8,210,28],"68":[191,4,191,83],"688":[210,8,210,28],"71":[191,4,191,83],"727":[98,19,98,34],"729":[98,19,98,34],"730":[104,11,104,24],"732":[104,25,104,31],"735":[104,11,104,32],"737":[104,11,104,32],"738":[104,11,104,32],"740":[104,11,104,32],"741":[104,11,104,32],"743":[104,11,104,32],"745":[104,11,104,32],"76":[191,43,191,83],"786":[109,14,109,30],"788":[109,14,109,30],"800":[109,32,109,50],"802":[109,32,109,50],"803":[116,11,116,26],"805":[116,27,116,33],"808":[116,11,116,34],"810":[116,11,116,34],"811":[116,11,116,34],"813":[116,11,116,34],"814":[116,11,116,34],"816":[116,11,116,34],"818":[116,11,116,34],"820":[116,35,116,43],"834":[116,11,116,44],"835":[116,11,116,44],"876":[120,12,120,30],"878":[120,12,120,30],"879":[132,39,132,45],"882":[131,4,131,19],"884":[131,20,131,30],"885":[131,4,131,31],"887":[131,4,131,31],"888":[131,4,131,31],"890":[131,4,131,31],"891":[131,4,131,31],"893":[131,4,131,31],"895":[131,4,131,31],"897":[131,32,131,40],"911":[131,4,131,41],"912":[131,4,131,41],"913":[131,4,131,50],"914":[132,29,132,37],"916":[132,4,132,46],"917":[132,17,132,27],"918":[132,4,132,46],"951":[132,39,132,45],"959":[132,4,132,46],"961":[132,4,132,46],"962":[133,11,133,15]},"runtimeBytecode":{"bytecode":"0x6003361161000c57610d3b565b60003560e01c634a92d6ca81186102b35760243610610e38576004358060a01c610e3857604052600933602052600052604060002054156100c85760266060527f596f7520616c72656164792068617665206120666f7274756e652063617264206080527f6d696e746564000000000000000000000000000000000000000000000000000060a05260605060605180608001601f826000031636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b6006546370a0823160605233608052602060606024607c845afa6100f1573d600060003e3d6000fd5b60203d10610e38576060905051156102545742600b33602052600052604060002054620151808101818110610e38579050111561018557601c60a0527f596f752063616e206f6e6c79206d696e74206f6e63652061206461790000000060c05260a05060a0518060c001601f826000031636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b60055460018101818110610e385790506005556009336020526000526040600020805460018101818110610e3857905081555042600b33602052600052604060002055600d5434808201828110610e385790509050600d55600733602052600052604060002060085481553460018201554260028201554460038201555060085460018101818110610e38579050600855337f1e5a50cc96c9a55d13bed3550c9d90f8c7deeebe51c827f15123e3bd592649d1600160a052602060a0a2600160a052602060a06102b1566102b1565b600c6060527f4e6f742061204c6567656e64000000000000000000000000000000000000000060805260605060605180608001601f826000031636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5bf35b34610e385763503f21cc81186102f35760243610610e38576004358060a01c610e3857604052600960405160205260005260406000205460605260206060f35b63dd62ed3e811861034d5760443610610e38576004358060a01c610e38576040526024358060a01c610e3857606052600a604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63095ea7b381186103cc5760443610610e38576004358060a01c610e3857604052602435600a336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b63a9059cbb81186104125760443610610e38576004358060a01c610e385760e0523360405260e051606052602435608052610405610d41565b6001610100526020610100f35b6323b872dd811861052c5760643610610e38576004358060a01c610e385760e0526024358060a01c610e385761010052604435600a60e05160205260005260406000208033602052600052604060002090505410156104cf576016610120527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006101405261012050610120518061014001601f826000031636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b600a60e05160205260005260406000208033602052600052604060002090508054604435808203828111610e38579050905081555060e0516040526101005160605260443560805261051f610d41565b6001610120526020610120f35b6391601563811861091e5760043610610e38576007336020526000526040600020805460405260018101546060526002810154608052600381015460a05250600160093360205260005260406000205410156105df57601f60c0527f596f7520646f6e742068617665206120666f7274756e6520746f206275726e0060e05260c05060c0518060e001601f826000031636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60805161012c8101818110610e38579050421161067857602c60c0527f57616974206174206c656173742035206d696e7574657320746f206275726e2060e0527f796f757220666f7274756e6500000000000000000000000000000000000000006101005260c05060c0518060e001601f826000031636823750506308c379a0608052602060a052601f19601f60c0510116604401609cfd5b60055460018103818111610e385790506005556009336020526000526040600020805460018103818111610e385790508155504744808201828110610e385790509050608051808201828110610e38579050905060a051808201828110610e385790509050604051808201828110610e38579050905060178106905060018116905061080957600d54606051808203828111610e385790509050600d55606051606051601054808202811583838304141715610e385790509050606481049050808203828111610e38579050905060c052600060006000600060c051336000f115610e3857337fa980a81ea4109d53a2b89ffe0eabc72cfb9f0221b2d6de5eb0638961105b2d7f60208061012052600460e0527f474f4f44000000000000000000000000000000000000000000000000000000006101005260e0816101200181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f825160200101169050905081019050610120a2600160e052602060e061091c5661091c565b600e54606051808201828110610e385790509050600e556060516060516010548060011b818160011c18610e38579050808202811583838304141715610e385790509050606481049050808203828111610e38579050905060c052600060006000600060c051336000f115610e3857337fa980a81ea4109d53a2b89ffe0eabc72cfb9f0221b2d6de5eb0638961105b2d7f60208061012052600360e0527f42414400000000000000000000000000000000000000000000000000000000006101005260e0816101200181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f825160200101169050905081019050610120a2600060e052602060e05bf35b6363ae4a9681186109595760243610610e38576004358060a01c610e3857604052600760405160205260005260406000205460605260206060f35b63bc97b0f081186109ab5760043610610e385760065460405260206040516370a0823160605233608052602060606024607c845afa61099d573d600060003e3d6000fd5b60203d10610e385760609050f35b63261f563981186109c85760043610610e38574760405260206040f35b63b387ef9281186109e75760043610610e385760115460405260206040f35b6313af40358118610a915760243610610e38576004358060a01c610e38576040523360115418610e38573360115418610a3257604051601155600160605260206060610a8f56610a8f565b600c6060527f4e6f742061204c6567656e64000000000000000000000000000000000000000060805260605060605180608001601f826000031636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5bf35b635315daf68118610ab05760043610610e3857600f5460405260206040f35b6391f17a458118610b645760043610610e38573360115418610e38573360115418610b05576000600060006000476011546000f115610e38576000600d556000600f55600160405260206040610b6256610b62565b60166040527f4e6f742074686520636f6e7472616374204f776e65720000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5bf35b6306fdde038118610be95760043610610e38576020806040528060400160005480825260208201600082601f0160051c60028111610e38578015610bbb57905b80600101548160051b840152600101818118610ba4575b505050508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b418118610c415760043610610e38576020806040528060400160035480825260208201600454815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6318160ddd8118610c605760043610610e385760055460405260206040f35b639659867e8118610c7f5760043610610e385760085460405260206040f35b636f37b17f8118610c9e5760043610610e3857600c5460405260206040f35b63789ced798118610cbd5760043610610e3857600d5460405260206040f35b6333a847648118610cdc5760043610610e3857600e5460405260206040f35b63e45940f08118610cfb5760043610610e3857600f5460405260206040f35b639249c5898118610d1a5760043610610e385760105460405260206040f35b638da5cb5b8118610d395760043610610e385760115460405260206040f35b505b60006000fd5b60805160096040516020526000526040600020541015610db857601460a0527f496e73756666696369656e742062616c616e636500000000000000000000000060c05260a05060a0518060c001601f826000031636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b600960405160205260005260406000208054608051808203828111610e385790509050815550600960605160205260005260406000208054608051808201828110610e3857905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b600080fda165767970657283000307000b"},"sourceId":"fortune.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;5983:11;;6409:13;6423:10;6409:25;;;;;;;:30;;6402:79;:::-;-1:-1;;6441:40;-1:-1;;6441:40;-1:-1;;6441:40;;6402:79;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6402:79::-;6489:20;:42;-1:-1;;;6520:10;-1:-1;;;;;;6489:42;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;6489:42;;:46;;6486:754;:::-;6616:15;6576;6592:10;6576:27;;;;;;;-1:-1;6606:7;-1:-1;;;;;;:::-;6576:37;;:55;6573:145;;:::-;-1:-1;;6688:30;-1:-1;;6688:30;;6682:36;-1:-1;;;;;;;;;;;;;;6682:36;-1:-1;;6682:36;-1:-1;;6682:36;-1:-1;;;;;;;;;;6682:36;6573:145::-;6727:16;-1:-1;6747:1;-1:-1;;;;;;:::-;6727:21;;:16;-1:-1;6757:13;6771:10;6757:25;;;;;;;-1:-1;;6786:1;-1:-1;;;;;;:::-;6757:30;;-1:-1;;6757:30;6826:15;6796;6812:10;6796:27;;;;;;;-1:-1;6850:19;-1:-1;6873:9;-1:-1;;;;;;;:::-;;;6850:32;;:19;-1:-1;6891:16;6908:10;6891:28;;;;;;;6960:14;-1:-1;6891:223;-1:-1;6997:9;-1:-1;6891:223;-1:-1;;7032:15;-1:-1;6891:223;-1:-1;;7073:16;-1:-1;6891:223;-1:-1;;6891:223;7123:14;-1:-1;7141:1;-1:-1;;;;;;:::-;7123:19;;:14;-1:-1;7167:10;7151:30;7181:0;-1:-1;;;7151:30;;7197:4;-1:-1;;;;;:::-;;6486:754::-;:::-;-1:-1;;7226:14;-1:-1;;7226:14;;7220:20;-1:-1;;;;;;;;;;;;;;7220:20;-1:-1;;7220:20;-1:-1;;7220:20;-1:-1;;;;;;;;;;7220:20;-1:-1::-;;:::-;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;2853:15;;3047:13;3061:6;-1:-1;3047:21;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3101:16;;-1:-1;;;;;;:::-;3119:18;;3437:15;3453:6;-1:-1;3437:23;;;;;;;-1:-1;3461:8;-1:-1;;;;;;;;3437:33;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3506:18;;4296:6;-1:-1;4210:15;4226:10;4210:27;;;;;;;-1:-1;4238:8;-1:-1;;;;;;;;4210:37;;:46;4286:8;4261:42;4274:10;4261:42;4296:6;-1:-1;;;;4261:42;;4315:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;4856:13;;5222:10;-1:-1;;5234:3;-1:-1;;;5239:6;-1:-1;;;;5207:39;:::i;:::-;5258:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;5303:15;;-1:-1;;;;;;:::-;5320:13;;5923:6;5772:44;:15;5788:5;-1:-1;5772:22;;;;;;;-1:-1;5795:10;-1:-1;;;;;;;5772:34;;:44;-1:-1;5765:77;;:::-;-1:-1;;5818:24;-1:-1;;5818:24;;5765:77;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5765:77::-;5847:15;5863:5;-1:-1;5847:22;;;;;;;-1:-1;5870:10;-1:-1;;;;;;;5847:34;;:44;;5923:6;-1:-1;;5847:44;-1:-1;5847:44;-1:-1;;;:::-;5847:44;;;;;-1:-1;5847:44;5911:5;-1:-1;;;5918:3;-1:-1;;;5923:6;-1:-1;;;;5896:34;:::i;:::-;5942:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;7570:16;7587:10;7570:28;;;;;;;7540:58;-1:-1;;;;7540:58;-1:-1;;;;;7540:58;-1:-1;;;;;7540:58;-1:-1;;;;7540:58;7639:1;7610:13;7624:10;7610:25;;;;;;;-1:-1;;7603:72;;:::-;-1:-1;;7642:33;-1:-1;;7642:33;;7603:72;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7603:72::-;7769:25;:31;7797:3;7769:31;-1:-1;7769:31;-1:-1;;;:::-;7769:31;;7751:15;:49;7744:105;:::-;-1:-1;;7803:46;-1:-1;;7803:46;-1:-1;;7803:46;;7744:105;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7744:105::-;7854:16;-1:-1;7874:1;-1:-1;;;;;;:::-;7854:21;;:16;-1:-1;7880:13;7894:10;7880:25;;;;;;;-1:-1;;7909:1;-1:-1;;;;;;:::-;7880:30;;-1:-1;;7880:30;7921:12;7936:16;-1:-1;;;;;;;:::-;;;7921:31;;7955:25;-1:-1;;7921:59;-1:-1;7921:59;-1:-1;;;:::-;7921:59;;;;7983:25;-1:-1;;7921:87;-1:-1;7921:87;-1:-1;;;:::-;7921:87;;;;8011:25;-1:-1;;7921:115;-1:-1;7921:115;-1:-1;;;:::-;7921:115;;;;8040:2;7920:122;;;;-1:-1;7919:128;;;;7916:652;:::-;8062:19;:45;8085:22;-1:-1;;8062:45;-1:-1;8062:45;-1:-1;;;:::-;8062:45;;;;:19;:45;8134:22;:74;8161:22;:40;8186:15;-1:-1;;8161:40;-1:-1;;;8161:40;-1:-1;;;;;;;:::-;8161:40;;;;8204:3;8161:46;-1:-1;8161:46;;-1:-1;8134:74;-1:-1;8134:74;-1:-1;;;:::-;8134:74;;;;8116:92;;-1:-1;;;;8234:6;-1:-1;8222:10;-1:-1;;8217:24;;:::-;8266:10;8250:35;-1:-1;;;;;;8278:6;-1:-1;;8278:6;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8250:35;;8301:4;-1:-1;;;;;:::-;;7916:652::-;:::-;8324:16;:42;8344:22;-1:-1;;8324:42;-1:-1;8324:42;-1:-1;;;:::-;8324:42;;;;:16;:42;8393:22;:78;8420:22;:44;8446:15;:17;;-1:-1;;8446:17;-1:-1;;;;;:::-;8446:17;;-1:-1;8420:44;-1:-1;;;8420:44;-1:-1;;;;;;;:::-;8420:44;;;;8467:3;8420:50;-1:-1;8420:50;;-1:-1;8393:78;-1:-1;8393:78;-1:-1;;;:::-;8393:78;;;;8375:96;;-1:-1;;;;8497:6;-1:-1;8485:10;-1:-1;;8480:24;;:::-;8529:10;8513:34;-1:-1;;;;;;8541:5;-1:-1;;8541:5;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8513:34;;8563:5;-1:-1;;;;:::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;8602:14;;8785:16;8802:6;-1:-1;8785:24;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;9046:20;-1:-1;;9019:47;-1:-1;9078:7;:29;-1:-1;;;9096:10;-1:-1;;;;;;9078:29;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;9078:29;;-1:-1;:::-;;;;;:::-;;;;;:::-;9354:12;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;9595:10;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9635:17;;10025:10;10011;:24;;10004:31;:::-;10057:10;10043;:24;;10040:118;:::-;10090:9;-1:-1;10077:10;-1:-1;10115:4;-1:-1;;;;;:::-;;10040:118::-;:::-;-1:-1;;10144:14;-1:-1;;10144:14;;10138:20;-1:-1;;;;;;;;;;;;;;10138:20;-1:-1;;10138:20;-1:-1;;10138:20;-1:-1;;;;;;;;;;10138:20;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;10438:28;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;10795:10;10781;:24;;10774:31;:::-;10827:10;10813;:24;;10810:209;:::-;-1:-1;;;;10864:12;10852:10;-1:-1;;;10847:30;;:::-;10908:1;10886:19;-1:-1;10949:1;10918:28;-1:-1;10966:4;-1:-1;;;;;:::-;;10810:209::-;:::-;-1:-1;;10995:24;-1:-1;;10995:24;;10989:30;-1:-1;;;;;;;;;;;;;;10989:30;-1:-1;;10989:30;-1:-1;;10989:30;-1:-1;;;;;;;;;;10989:30;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;4332:487::-;4684:6;-1:-1;4660:13;4674:5;-1:-1;4660:20;;;;;;;-1:-1;;4653:61;;:::-;-1:-1;;4692:22;-1:-1;;4692:22;;4653:61;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4653:61::-;4719:13;4733:5;-1:-1;4719:20;;;;;;;-1:-1;;4743:6;-1:-1;;;;;;;;:::-;;;4719:30;;-1:-1;;4719:30;4754:13;4768:3;-1:-1;4754:18;;;;;;;-1:-1;;4776:6;-1:-1;;;;;;;;:::-;;;4754:28;;-1:-1;;4754:28;4807:3;4787:32;4800:5;4787:32;;4812:6;-1:-1;;;;4787:32;;-1:-1::-;:::-;;;","userdoc":{"methods":{"allowance(address,address)":{"notice":"Getter to check the amount of tokens that an owner allowed to a spender"},"approve(address,uint256)":{"notice":"Approve an address to spend the specified amount of tokens on behalf of msg.sender"},"burnFortune()":{"notice":"Burn a fortune from an specified address"},"cardOwnedBy(address)":{"notice":"Getter to check the current cardNumber of an address"},"currentOwner()":{"notice":"Getter to check the current owner of the fortune chest"},"fortuneBalance(address)":{"notice":"Getter to check the current balance of an address"},"getFortuneChestBalance()":{"notice":"Getter to check the current ETH balance of the fortune chest"},"getLegendBalance()":{"notice":"Getter to check the current balance of an address"},"getUnclaimedLostTribute()":{"notice":"Getter to check the current ETH balance of the fortune chest that has been lost and unclaimed"},"mintFortune(address)":{"notice":"Mint a fortune to an specified address which holds the nft"},"setOwner(address)":{"notice":"Setter to set the owner of the fortune chest"},"transfer(address,uint256)":{"notice":"Transfer tokens to a specified address"},"transferFrom(address,address,uint256)":{"notice":"Transfer tokens from one address to another"},"withdrawLostTributes()":{"notice":"Withdraw the ETH from the fortune chest"}},"notice":"This is a bare-bones implementation of the Fortune cards It is not meant to be used in production, but rather as a starting point for the final implementation Owners of the Legends NFT can mint an unrevealed Fortune card as an ERC20 to any address. The Fortune cards can be burned to generate an event of GOOD or BAD fortune. The event is a string of 4 characters, which can be used by the frontend to display a message, and for the game to build upon it later. The Fortune cards can be traded, but only the owner of the NFT can mint a new Fortune card. When the FORTUNE card is burnt, the burner can pay a tribute to alter the event. The tribute is paid in ETH. There is a withdraw function that can only be called by the owner of the contract. This is to allow the owner to withdraw the ETH tributes."}},"nft_mocked_contract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"}],"name":"Burn","type":"event"},{"inputs":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"to","type":"address"}],"name":"mintNFT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"cardOwner","type":"address"}],"name":"burnNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"legend","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"supply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"contractName":"nft_mocked_contract","deploymentBytecode":{"bytecode":"0x60206103be60003960005160406020826103be01600039600051116103b9576020816103be01600039600051806040526020820181816103be0160603950505060206103de60003960005160206020826103be01600039600051116103b9576020816103be016000396000518060a052602082016020816103be0160003960005160c052505050346103b95760405180600055600081601f0160051c600281116103b95780156100c357905b8060051b6060015181600101556001018181186100ab575b50505060a0518060035560c0516004555060206103fe6000396000516007556102c46100f4610000396102c4610000f36003361161000c576102ac565b60003560e01c6354ba0f27811861009357602436106102b2576004358060a01c6102b257604052600754600181018181106102b2579050600755600660405160205260005260406000208054600181018181106102b25790508155506040517f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b056560006060a2005b346102b25763f83efec8811861011957602436106102b2576004358060a01c6102b257604052600754600181038181116102b2579050600755600660405160205260005260406000208054600181038181116102b25790508155506040517fe22de1457cb61fb61b60176bc4235a9abd19466126b46692bc14fc573f09924960006060a2005b6370a08231811861015457602436106102b2576004358060a01c6102b257604052600660405160205260005260406000205460605260206060f35b6306fdde0381186101d957600436106102b2576020806040528060400160005480825260208201600082601f0160051c600281116102b25780156101ab57905b80600101548160051b840152600101818118610194575b505050508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b41811861023157600436106102b2576020806040528060400160035480825260208201600454815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63378dc3dc811861025057600436106102b25760055460405260206040f35b6327e235e3811861028b57602436106102b2576004358060a01c6102b257604052600660405160205260005260406000205460605260206060f35b63047fc9aa81186102aa57600436106102b25760075460405260206040f35b505b60006000fd5b600080fda165767970657283000307000b005b600080fd"},"dev_messages":{},"devdoc":{"author":"0xcassini.eth","details":"This contract replicates the functionality of the ERC721 standard, but with a few differences. It is intended to be used for testing purposes only.","methods":{"__init__(string,string,uint256)":{"params":{"initialSupply":"The initial supply of the token","name":"The name of the token","symbol":"The symbol of the token"}},"balanceOf(address)":{"params":{"legend":"The address to get the balance of"}},"burnNFT(address)":{"params":{"cardOwner":"The address to burn the token from"}},"mintNFT(address)":{"params":{"to":"The address to mint the token to"}}},"title":"Mock Saturn Series ERC721 Token"},"pcmap":{"100":[44,4,44,26],"101":[44,4,44,26],"104":[44,4,44,26],"105":[45,15,45,16],"107":[45,4,45,16],"108":[45,4,45,16],"141":[45,4,45,16],"143":[45,4,45,16],"145":[45,4,45,16],"183":[48,12,48,30],"185":[48,12,48,30],"186":[53,4,53,15],"189":[53,19,53,20],"200":[53,4,53,20],"201":[53,4,53,20],"202":[53,4,53,15],"205":[54,4,54,17],"207":[54,18,54,27],"210":[54,4,54,28],"212":[54,4,54,28],"213":[54,4,54,28],"215":[54,4,54,28],"216":[54,4,54,28],"218":[54,4,54,28],"220":[54,4,54,28],"223":[54,32,54,33],"234":[54,4,54,33],"235":[54,4,54,33],"238":[54,4,54,33],"239":[55,13,55,22],"241":[55,4,55,23],"242":[55,4,55,23],"275":[55,4,55,23],"277":[55,4,55,23],"279":[55,4,55,23],"312":[59,14,59,29],"314":[59,14,59,29],"315":[64,11,64,24],"317":[64,25,64,31],"320":[64,11,64,32],"322":[64,11,64,32],"323":[64,11,64,32],"325":[64,11,64,32],"326":[64,11,64,32],"328":[64,11,64,32],"330":[64,11,64,32],"49":[38,12,38,23],"51":[38,12,38,23],"52":[43,4,43,15],"55":[43,19,43,20],"66":[43,4,43,20],"67":[43,4,43,20],"68":[43,4,43,15],"71":[44,4,44,17],"73":[44,18,44,20],"76":[44,4,44,21],"78":[44,4,44,21],"79":[44,4,44,21],"81":[44,4,44,21],"82":[44,4,44,21],"84":[44,4,44,21],"86":[44,4,44,21],"89":[44,25,44,26]},"runtimeBytecode":{"bytecode":"0x6003361161000c576102ac565b60003560e01c6354ba0f27811861009357602436106102b2576004358060a01c6102b257604052600754600181018181106102b2579050600755600660405160205260005260406000208054600181018181106102b25790508155506040517f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b056560006060a2005b346102b25763f83efec8811861011957602436106102b2576004358060a01c6102b257604052600754600181038181116102b2579050600755600660405160205260005260406000208054600181038181116102b25790508155506040517fe22de1457cb61fb61b60176bc4235a9abd19466126b46692bc14fc573f09924960006060a2005b6370a08231811861015457602436106102b2576004358060a01c6102b257604052600660405160205260005260406000205460605260206060f35b6306fdde0381186101d957600436106102b2576020806040528060400160005480825260208201600082601f0160051c600281116102b25780156101ab57905b80600101548160051b840152600101818118610194575b505050508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b41811861023157600436106102b2576020806040528060400160035480825260208201600454815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63378dc3dc811861025057600436106102b25760055460405260206040f35b6327e235e3811861028b57602436106102b2576004358060a01c6102b257604052600660405160205260005260406000205460605260206060f35b63047fc9aa81186102aa57600436106102b25760075460405260206040f35b505b60006000fd5b600080fda165767970657283000307000b"},"sourceId":"nft_mocked_contract.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;866:11;;981;-1:-1;996:1;-1:-1;;;;;;:::-;981:16;;:11;-1:-1;1002:13;1016:2;-1:-1;1002:17;;;;;;;-1:-1;;1023:1;-1:-1;;;;;;:::-;1002:22;;-1:-1;;1002:22;1040:1;1029:12;;;;;-1:-1;:::-;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1065:18;;1192:11;-1:-1;1207:1;-1:-1;;;;;;:::-;1192:16;;:11;-1:-1;1213:13;1227:9;-1:-1;1213:24;;;;;;;-1:-1;;1241:1;-1:-1;;;;;;:::-;1213:29;;-1:-1;;1213:29;1256:9;1247:19;;;;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1298:15;;1450:13;1464:6;-1:-1;1450:21;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;:::-;;;","userdoc":{"methods":{"__init__(string,string,uint256)":{"notice":"Initialize the contract"},"balanceOf(address)":{"notice":"Get the balance of a mocked NFT"},"burnNFT(address)":{"notice":"Burn a mocked NFT"},"mintNFT(address)":{"notice":"Mint a new mocked NFT"}}}}},"manifest":"ethpm/3","sources":{"fortune.vy":{"checksum":{"algorithm":"md5","hash":"0xfbbfc52fdfb4d2ec337f3eff6e4c0a98"},"content":"# @version ^0.3.7\n\n\"\"\"\n@title Bare-bones Token implementation of the Fortune cards\n@notice This is a bare-bones implementation of the Fortune cards\n        It is not meant to be used in production, but rather as a\n        starting point for the final implementation\n        \n        Owners of the Legends NFT can mint an unrevealed Fortune\n        card as an ERC20 to any address.\n\n        The Fortune cards can be burned to generate an event of GOOD or BAD\n        fortune. The event is a string of 4 characters, which can be used\n        by the frontend to display a message, and for the game to build upon it later.\n    \n        The Fortune cards can be traded, but only the owner of the NFT can mint\n        a new Fortune card.\n\n        When the FORTUNE card is burnt, the burner can pay a tribute to alter the event.\n        The tribute is paid in ETH.\n\n        There is a withdraw function that can only be called by the owner of the contract.\n        This is to allow the owner to withdraw the ETH tributes.\n\n@author 0xcassini.eth\n\"\"\"\n\n\ninterface LegendsContract:\n    def balanceOf(_owner: address) -> uint256: view\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent MintFortune:\n    receiver: indexed(address)\n    value: uint256\n\nevent BurnFortune:\n    legend: indexed(address)\n    value: String[4]\n\n# The Fortune card is an ERC20 token that is tied to the value of the tribute it was minted with\nstruct FortuneCard:\n    cardNumber: uint256\n    tribute: uint256\n    dateMinted: uint256\n    randomness: uint256\n    \n\n\nname: public(String[64])\nsymbol: public(String[32])\ntotalSupply: public(uint256)\nlegendsContract: LegendsContract\n\n# The mapping of the Fortune cards\n# The key is the address of the minter of the token\n# The value is the Fortune card's msg.value\nfortunesLog: HashMap[address, FortuneCard]\n\n# Used to keep track of the number of Fortune cards minted\nmintCount: public(uint256)\n\nbalances: HashMap[address, uint256]\nallowances: HashMap[address, HashMap[address, uint256]]\nlastMinted: HashMap[address, uint256]\n\nfortuneContract: public(address)\ntributeBalance: public(uint256)\ntributeLost: public(uint256)\ntributeLostAndUnclaimed: public(uint256)\ntributeFee: public(uint256)\n\nowner: public(address)\n\n@external\ndef __init__(_name: String[64], _symbol: String[32], _total_supply: uint256, legendsAddress: address, tributeFee: uint256):\n    self.name = _name\n    self.symbol = _symbol\n    self.balances[msg.sender] = _total_supply\n    self.totalSupply = _total_supply\n    self.legendsContract = LegendsContract(legendsAddress)\n    self.owner = msg.sender\n    self.tributeFee = tributeFee\n    log Transfer(empty(address), msg.sender, _total_supply)\n    \n\n@view\n@external\ndef fortuneBalance(_owner: address) -> uint256:\n    \"\"\"\n    @notice Getter to check the current balance of an address\n    @param _owner Address to query the balance of\n    @return Token balance\n    \"\"\"\n    return self.balances[_owner]\n\n\n@view\n@external\ndef allowance(_owner : address, _spender : address) -> uint256:\n    \"\"\"\n    @notice Getter to check the amount of tokens that an owner allowed to a spender\n    @param _owner The address which owns the funds\n    @param _spender The address which will spend the funds\n    @return The amount of tokens still available for the spender\n    \"\"\"\n    return self.allowances[_owner][_spender]\n\n@nonpayable\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n    @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    @return Success boolean\n    \"\"\"\n    self.allowances[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@internal\ndef _transfer(_from: address, _to: address, _value: uint256):\n    \"\"\"\n    @dev Internal shared logic for transfer and transferFrom\n    @param _from The address which you want to send tokens from\n    @param _to The address which you want to transfer to\n    @param _value The amount of tokens to be transferred\n    \"\"\"\n    assert self.balances[_from] >= _value, \"Insufficient balance\"\n    self.balances[_from] -= _value\n    self.balances[_to] += _value\n    log Transfer(_from, _to, _value)\n\n@nonpayable\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Transfer tokens to a specified address\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _to The address to transfer to\n    @param _value The amount to be transferred\n    @return Success boolean\n    \"\"\"\n    self._transfer(msg.sender, _to, _value)\n    return True\n\n@nonpayable\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Transfer tokens from one address to another\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _from The address which you want to send tokens from\n    @param _to The address which you want to transfer to\n    @param _value The amount of tokens to be transferred\n    @return Success boolean\n    \"\"\"\n    assert self.allowances[_from][msg.sender] >= _value, \"Insufficient allowance\"\n    self.allowances[_from][msg.sender] -= _value\n    self._transfer(_from, _to, _value)\n    return True\n\n@payable\n@external\ndef mintFortune(to: address) -> bool:\n    \"\"\"\n    @notice Mint a fortune to an specified address which holds the nft\n    @dev this is not yet tested and should be used with caution\n    @dev You could add an assert here to make sure the owner of the nft is the one who can mint\n    @param to who receives the fortune\n    @return True if the caller addres is a legend\n    \"\"\"\n    # Make sure the minter doesnt have a fortune already\n    assert self.balances[msg.sender] == 0, \"You already have a fortune card minted\"\n    if self.legendsContract.balanceOf(msg.sender) > 0: # if the caller is a legend\n        if self.lastMinted[msg.sender] + 3600*24 > block.timestamp: # if 24 hours passed since last mint\n            raise \"You can only mint once a day\"\n        self.totalSupply += 1\n        self.balances[msg.sender] += 1\n        self.lastMinted[msg.sender] = block.timestamp\n        self.tributeBalance += msg.value\n        self.fortunesLog[msg.sender] = FortuneCard({\n            cardNumber: self.mintCount,\n            tribute: msg.value,\n            dateMinted: block.timestamp,\n            randomness: block.prevrandao,\n            }\n        )\n        self.mintCount += 1\n        log MintFortune(msg.sender, 1)\n        return True\n    else:\n        raise \"Not a Legend\"\n\n@external\ndef burnFortune() -> bool:\n    \"\"\"\n    @notice Burn a fortune from an specified address\n    @dev this is not yet tested and should be used with caution\n    @dev You could add an assert here to make sure the owner of the nft is the one who can burn\n    @return Success boolean\n    \"\"\"\n    currentFortune: FortuneCard = self.fortunesLog[msg.sender]\n    assert self.balances[msg.sender] >= 1, \"You dont have a fortune to burn\"\n    # Make sure there has passed at least 60 seconds since mint\n    assert block.timestamp > currentFortune.dateMinted + 300 , \"Wait at least 5 minutes to burn your fortune\"\n    self.totalSupply -= 1\n    self.balances[msg.sender] -= 1\n\n    if ((self.balance + block.prevrandao + currentFortune.dateMinted + currentFortune.randomness + currentFortune.cardNumber) % 23) % 2 == 0:\n        self.tributeBalance -= currentFortune.tribute\n        reward: uint256 = currentFortune.tribute - ( currentFortune.tribute * self.tributeFee / 100)\n        send(msg.sender, reward)\n        log BurnFortune(msg.sender, 'GOOD')\n        return True\n    else:\n        self.tributeLost += currentFortune.tribute\n        reward: uint256 = currentFortune.tribute - ( currentFortune.tribute * (self.tributeFee*2) / 100)\n        send(msg.sender, reward)\n        log BurnFortune(msg.sender, 'BAD')\n        return False\n\n@view\n@external\ndef cardOwnedBy(legend:address)-> uint256:\n    \"\"\"\n    @notice Getter to check the current cardNumber of an address\n    @dev this is not yet tested and should be used with caution\n    \"\"\"\n    return self.fortunesLog[legend].cardNumber\n\n@view\n@external\ndef getLegendBalance() -> uint256:\n    \"\"\"\n    @notice Getter to check the current balance of an address\n    @dev this is not yet tested and should be used with caution\n    \"\"\"\n    legends: LegendsContract = self.legendsContract\n    return legends.balanceOf(msg.sender)\n\n@view\n@external\ndef getFortuneChestBalance() -> uint256:\n    \"\"\"\n    @notice Getter to check the current ETH balance of the fortune chest\n    @dev this is not yet tested and should be used with caution\n    @return ETH balance\n    \"\"\"\n    return self.balance\n\n# Admin functions\n\n@external\ndef currentOwner() -> address:\n    \"\"\"\n    @notice Getter to check the current owner of the fortune chest\n    @dev this is not yet tested and should be used with caution    \n    \"\"\"\n    \n    return self.owner \n    \n@external\ndef setOwner(new_owner:address) -> bool:\n    \"\"\"\n    @notice Setter to set the owner of the fortune chest\n    @dev this is not yet tested and should be used with caution\n    @dev You could add an assert here to make sure the owner of the nft is the one who can burn\n    @param new_owner The address that will be the new owner of the contract\n    @return Success boolean\n    \"\"\"\n    assert self.owner == msg.sender\n    if self.owner == msg.sender:\n        self.owner = new_owner\n        return True\n    else:\n        raise \"Not a Legend\"\n\n@view\n@external\ndef getUnclaimedLostTribute()-> uint256:\n    \"\"\"\n    @notice Getter to check the current ETH balance of the fortune chest that has been lost and unclaimed\n    @dev this is not yet tested and should be used with caution\n    @return ETH balance\n    \"\"\"\n    return self.tributeLostAndUnclaimed\n\n@external\ndef withdrawLostTributes() -> bool:\n    \"\"\"\n    @notice Withdraw the ETH from the fortune chest\n    @dev this is not yet tested and should be used with caution\n    @dev You could add an assert here to make sure the owner of the nft is the one who can burn\n    @return Success boolean\n    \"\"\"\n    assert self.owner == msg.sender\n    if self.owner == msg.sender:\n        send(self.owner, self.balance)\n        self.tributeBalance = 0\n        self.tributeLostAndUnclaimed = 0\n        return True\n    else:\n        raise \"Not the contract Owner\"\n","imports":[],"references":[],"urls":[]},"nft_mocked_contract.vy":{"checksum":{"algorithm":"md5","hash":"0x449ae26f06f2d2a85dace74193f13ca1"},"content":"# @version ^0.3.7\n\"\"\"\n@title Mock Saturn Series ERC721 Token\n@dev This contract replicates the functionality of the ERC721 standard, but\n     with a few differences. It is intended to be used for testing purposes\n     only.\n@author 0xcassini.eth\n\"\"\"\n\nevent Mint:\n    to: indexed(address)\n\nevent Burn:\n    to: indexed(address)\n\nname: public(String[64])\nsymbol: public(String[32])\ninitialSupply: public(uint256)\nbalances: public(HashMap[address, uint256])\nsupply: public(uint256)\n\n@external\ndef __init__(name: String[64], symbol: String[32], initialSupply: uint256):\n    \"\"\"\n    @notice Initialize the contract\n    @param name The name of the token\n    @param symbol The symbol of the token\n    @param initialSupply The initial supply of the token\n    \"\"\"\n    self.name = name\n    self.symbol = symbol\n    self.supply = initialSupply\n\n\n\n@payable\n@external\ndef mintNFT(to: address):\n    \"\"\"\n    @notice Mint a new mocked NFT\n    @param to The address to mint the token to\n    \"\"\"\n    self.supply += 1\n    self.balances[to] += 1\n    log Mint(to)\n\n@external\ndef burnNFT(cardOwner: address):\n    \"\"\"\n    @notice Burn a mocked NFT\n    @param cardOwner The address to burn the token from\n    \"\"\"\n    self.supply -= 1\n    self.balances[cardOwner] -= 1\n    log Burn(cardOwner)\n\n@view\n@external\ndef balanceOf(legend: address) -> uint256:\n    \"\"\"\n    @notice Get the balance of a mocked NFT\n    @param legend The address to get the balance of\n    \"\"\"\n    return self.balances[legend]\n\n","imports":[],"references":[],"urls":[]}}}