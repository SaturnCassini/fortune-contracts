Metadata-Version: 2.1
Name: ethpm-types
Version: 0.3.16
Summary: ethpm_types: Implementation of EIP-2678
Home-page: https://github.com/ApeWorX/ethpm-types
Author: ApeWorX Ltd.
Author-email: admin@apeworx.io
License: Apache-2.0
Keywords: ethereum
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8,<3.11
Description-Content-Type: text/markdown
Requires-Dist: hexbytes (<1,>=0.2.3)
Requires-Dist: pydantic (<2,>=1.10.1)
Requires-Dist: eth-utils (<3,>=2.0.0)
Requires-Dist: py-cid (<0.4,>=0.3.0)
Requires-Dist: requests (<3,>=2.28.1)
Provides-Extra: dev
Requires-Dist: pytest (>=6.0) ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: hypothesis (<7.0,>=6.2.0) ; extra == 'dev'
Requires-Dist: PyGithub (<2.0,>=1.54) ; extra == 'dev'
Requires-Dist: hypothesis-jsonschema (==0.19.0) ; extra == 'dev'
Requires-Dist: pysha3 (<2.0.0,>=1.0.2) ; extra == 'dev'
Requires-Dist: black (>=22.12.0) ; extra == 'dev'
Requires-Dist: mypy (==0.991) ; extra == 'dev'
Requires-Dist: types-setuptools ; extra == 'dev'
Requires-Dist: types-requests ; extra == 'dev'
Requires-Dist: flake8 (>=5.0.4) ; extra == 'dev'
Requires-Dist: flake8-breakpoint (>=1.1.0) ; extra == 'dev'
Requires-Dist: flake8-print (>=4.0.0) ; extra == 'dev'
Requires-Dist: isort (>=5.10.1) ; extra == 'dev'
Requires-Dist: setuptools ; extra == 'dev'
Requires-Dist: wheel ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'
Requires-Dist: commitizen ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pytest-watch ; extra == 'dev'
Requires-Dist: IPython ; extra == 'dev'
Requires-Dist: ipdb ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: myst-parser (<0.18,>=0.17.0) ; extra == 'doc'
Requires-Dist: sphinx-click (<4.0,>=3.1.0) ; extra == 'doc'
Requires-Dist: Sphinx (<5.0,>=4.4.0) ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme (<2,>=1.0.0) ; extra == 'doc'
Requires-Dist: sphinxcontrib-napoleon (>=0.7) ; extra == 'doc'
Provides-Extra: lint
Requires-Dist: black (>=22.12.0) ; extra == 'lint'
Requires-Dist: mypy (==0.991) ; extra == 'lint'
Requires-Dist: types-setuptools ; extra == 'lint'
Requires-Dist: types-requests ; extra == 'lint'
Requires-Dist: flake8 (>=5.0.4) ; extra == 'lint'
Requires-Dist: flake8-breakpoint (>=1.1.0) ; extra == 'lint'
Requires-Dist: flake8-print (>=4.0.0) ; extra == 'lint'
Requires-Dist: isort (>=5.10.1) ; extra == 'lint'
Provides-Extra: release
Requires-Dist: setuptools ; extra == 'release'
Requires-Dist: wheel ; extra == 'release'
Requires-Dist: twine ; extra == 'release'
Provides-Extra: test
Requires-Dist: pytest (>=6.0) ; extra == 'test'
Requires-Dist: pytest-xdist ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: hypothesis (<7.0,>=6.2.0) ; extra == 'test'
Requires-Dist: PyGithub (<2.0,>=1.54) ; extra == 'test'
Requires-Dist: hypothesis-jsonschema (==0.19.0) ; extra == 'test'
Requires-Dist: pysha3 (<2.0.0,>=1.0.2) ; extra == 'test'

# Quick Start

EthPM is an Ethereum package manifest containing data types for contracts, deployments, and source code using [EIP-2678](https://eips.ethereum.org/EIPS/eip-2678).
The library validates and serializes contract related data and provides JSON schemas.

## Dependencies

* [python3](https://www.python.org/downloads) version 3.8 or greater, python3-dev

## Installation

### via `pip`

You can install the latest release via [`pip`](https://pypi.org/project/pip/):

```bash
pip install ethpm-types
```

### via `setuptools`

You can clone the repository and use [`setuptools`](https://github.com/pypa/setuptools) for the most up-to-date version:

```bash
git clone https://github.com/ApeWorX/ethpm-types.git
cd ethpm-types
python3 setup.py install
```

## Quick Usage

Starting with a dictionary of attribute data, such as a contract instance, you can build an EthPM typed object.

```python
from ethpm_types import ContractInstance

contract = ContractInstance(contractType="ContractClassName", address="0x123...")
print(contract.contract_type)
```


