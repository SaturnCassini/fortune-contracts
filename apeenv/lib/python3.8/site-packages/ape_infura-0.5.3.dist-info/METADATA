Metadata-Version: 2.1
Name: ape-infura
Version: 0.5.3
Summary: ape-infura: Infura Provider plugins for Ethereum-based networks
Home-page: https://github.com/ApeWorX/ape-infura
Author: ApeWorX Ltd.
Author-email: admin@apeworx.io
License: Apache-2.0
Keywords: ethereum
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8,<3.11
Description-Content-Type: text/markdown
Requires-Dist: eth-ape (<0.6,>=0.5.2)
Provides-Extra: dev
Requires-Dist: pytest (>=6.0) ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: hypothesis (<7.0,>=6.2.0) ; extra == 'dev'
Requires-Dist: ape-arbitrum ; extra == 'dev'
Requires-Dist: ape-optimism ; extra == 'dev'
Requires-Dist: ape-polygon ; extra == 'dev'
Requires-Dist: black (>=22.10.0) ; extra == 'dev'
Requires-Dist: mypy (>=0.982) ; extra == 'dev'
Requires-Dist: flake8 (>=5.0.4) ; extra == 'dev'
Requires-Dist: isort (>=5.10.1) ; extra == 'dev'
Requires-Dist: Sphinx (<4,>=3.4.3) ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (<1,>=0.1.9) ; extra == 'dev'
Requires-Dist: towncrier (<20,>=19.2.0) ; extra == 'dev'
Requires-Dist: setuptools ; extra == 'dev'
Requires-Dist: setuptools-scm ; extra == 'dev'
Requires-Dist: wheel ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'
Requires-Dist: commitizen ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pytest-watch ; extra == 'dev'
Requires-Dist: IPython ; extra == 'dev'
Requires-Dist: ipdb ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: Sphinx (<4,>=3.4.3) ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme (<1,>=0.1.9) ; extra == 'doc'
Requires-Dist: towncrier (<20,>=19.2.0) ; extra == 'doc'
Provides-Extra: lint
Requires-Dist: black (>=22.10.0) ; extra == 'lint'
Requires-Dist: mypy (>=0.982) ; extra == 'lint'
Requires-Dist: flake8 (>=5.0.4) ; extra == 'lint'
Requires-Dist: isort (>=5.10.1) ; extra == 'lint'
Provides-Extra: release
Requires-Dist: setuptools ; extra == 'release'
Requires-Dist: setuptools-scm ; extra == 'release'
Requires-Dist: wheel ; extra == 'release'
Requires-Dist: twine ; extra == 'release'
Provides-Extra: test
Requires-Dist: pytest (>=6.0) ; extra == 'test'
Requires-Dist: pytest-xdist ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: hypothesis (<7.0,>=6.2.0) ; extra == 'test'
Requires-Dist: ape-arbitrum ; extra == 'test'
Requires-Dist: ape-optimism ; extra == 'test'
Requires-Dist: ape-polygon ; extra == 'test'

# Quick Start

Use the [Infura](https://infura.io/) provider plugin to interact with blockchains via APIs.
This plugin supports the following ecosystems:

* Ethereum
* Polygon
* Arbitrum
* Optimism

## Dependencies

* [python3](https://www.python.org/downloads) version 3.8 or greater, python3-dev

## Installation

### via `pip`

You can install the latest release via [`pip`](https://pypi.org/project/pip/):

```bash
pip install ape-infura
```

### via `setuptools`

You can clone the repository and use [`setuptools`](https://github.com/pypa/setuptools) for the most up-to-date version:

```bash
git clone https://github.com/ApeWorX/ape-infura.git
cd ape-infura
python3 setup.py install
```

## Quick Usage

First, make sure you have one of the following environment variables set (it doesn't matter which one):

* WEB3_INFURA_PROJECT_ID
* WEB3_INFURA_API_KEY

Either in your current terminal session or in your root RC file (e.g. `.bashrc`), add the following:

```bash
export WEB3_INFURA_PROJECT_ID=MY_API_TOKEN
```

To use the Infura provider plugin in most commands, set it via the `--network` option:

```bash
ape console --network ethereum:goerli:infura
```

To connect to Infura from a Python script, use the `networks` top-level manager:

```python
from ape import networks

with networks.parse_network_choice("ethereum:mainnet:infura") as provider:
    ...
```


