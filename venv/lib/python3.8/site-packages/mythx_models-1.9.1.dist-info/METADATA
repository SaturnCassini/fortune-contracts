Metadata-Version: 2.1
Name: mythx-models
Version: 1.9.1
Summary: Python domain model classes for the MythX platform
Home-page: https://github.com/dmuhs/mythx-models
Author: Dominik Muhs
Author-email: dominik.muhs@consensys.net
License: MIT license
Keywords: mythx
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Dist: jsonschema (<4.0.0)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: inflection (==0.5.0)

=======================
The MythX Domain Models
=======================


.. image:: https://img.shields.io/pypi/v/mythx-models.svg
        :target: https://pypi.org/project/mythx-models/

.. image:: https://travis-ci.org/dmuhs/mythx-models.svg?branch=master
        :target: https://travis-ci.org/dmuhs/mythx-models

.. image:: https://readthedocs.org/projects/mythx-models/badge/?version=latest
        :target: https://mythx-models.readthedocs.io/en/latest/?badge=latest

.. image:: https://pyup.io/repos/github/dmuhs/mythx-models/shield.svg
        :target: https://pyup.io/repos/github/dmuhs/mythx-models/

.. image:: https://coveralls.io/repos/github/dmuhs/mythx-models/badge.svg?branch=master
        :target: https://coveralls.io/github/dmuhs/mythx-models?branch=master


This repository contains the domain models for the MythX_ smart contract security analysis platform.

.. contents:: Table of Contents


What is MythX?
--------------
MythX is a security analysis API that allows anyone to create purpose-built
security tools for smart contract developers. Tools built on MythX integrate
seamlessly into the development environments and continuous integration
pipelines used throughout the Ethereum ecosystem.


Installation
------------
The MythX domain models runs on Python 3.5+.

To get started, simply run

.. code-block:: console

    $ pip3 install mythx-models

Alternatively, clone the repository and run

.. code-block:: console

    $ pip3 install .

Or directly through Python's :code:`setuptools`:

.. code-block:: console

    $ python3 setup.py install


.. _MythX: https://mythx.io/


=======
History
=======

1.5.1 (2019-10-31)
------------------

- Fix bug where new API field would raise a TypeError
- Update :code:`pytest` to 5.2.2
- Update :code:`sphinx` to 2.2.1


1.5.0 (2019-10-19)
------------------

- Added support to group_id in models
- Update :code:`pytest` to 5.2.1
- Update :code:`pytest-cov` to 2.8.1


1.4.1 (2019-10-04)
------------------

- Add fix for edge case where decoded locations are empty but still given


1.4.0 (2019-10-04)
------------------

- Update pytest from 5.1.2 to 5.2.0
- Add support for decoded locations


1.3.4 + 1.3.5 (2019-09-19)
--------------------------

- Lift :code:`jsonschema` dependency even more for broad support


1.3.3 (2019-09-15)
------------------

- Update twine from 1.13.0 to 1.14.0
- Take over :code:`jsonschema` dependency to support web3py


1.3.2 (2019-09-06)
------------------

- Update pytest from 5.1.1 to 5.1.2
- Add models to fetch analysis input data


1.3.1 (2019-08-30)
------------------

- Add info field to analysis status model


1.3.0 (2019-08-29)
------------------

- Allow null values in submission request and issues response models


1.2.0 (2019-08-29)
------------------

- Added models for source map representation (including source map decompression)


1.1.0 (2019-08-27)
------------------

- Removed the minimum size limit for a detected issue report list
- Added an :code:`as_list` option to the detected issue response model to support non-object input


1.0.0 (2019-08-26)
------------------

- Added all models originally in PythX
- Extended models with :code:`BaseModel` class
- Make issue reports and various submodels JSON serializable
- Added documentation to readthedocs.io
- Added CI with Travis
- Added coverage metrics with codecov
- Added packaging pipeline to PyPI


